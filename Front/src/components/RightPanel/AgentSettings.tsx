function AgentSettings(){
    return(<aside className="rightDrawer">
        {/*<div className='userSettingsContainer'>
            <button>
                <svg style={{transform:'translateY(0px)'}} width="24" height="20" viewBox="0 0 22 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 13C7.80222 13 7.60888 13.0586 7.44443 13.1685C7.27998 13.2784 7.15181 13.4346 7.07612 13.6173C7.00043 13.8 6.98063 14.0011 7.01921 14.1951C7.0578 14.3891 7.15304 14.5673 7.29289 14.7071C7.43275 14.847 7.61093 14.9422 7.80491 14.9808C7.99889 15.0194 8.19996 14.9996 8.38268 14.9239C8.56541 14.8482 8.72159 14.72 8.83147 14.5556C8.94135 14.3911 9 14.1978 9 14C9 13.7348 8.89464 13.4804 8.70711 13.2929C8.51957 13.1054 8.26522 13 8 13ZM1 12C0.734784 12 0.48043 12.1054 0.292893 12.2929C0.105357 12.4804 0 12.7348 0 13V15C0 15.2652 0.105357 15.5196 0.292893 15.7071C0.48043 15.8946 0.734784 16 1 16C1.26522 16 1.51957 15.8946 1.70711 15.7071C1.89464 15.5196 2 15.2652 2 15V13C2 12.7348 1.89464 12.4804 1.70711 12.2929C1.51957 12.1054 1.26522 12 1 12ZM21 12C20.7348 12 20.4804 12.1054 20.2929 12.2929C20.1054 12.4804 20 12.7348 20 13V15C20 15.2652 20.1054 15.5196 20.2929 15.7071C20.4804 15.8946 20.7348 16 21 16C21.2652 16 21.5196 15.8946 21.7071 15.7071C21.8946 15.5196 22 15.2652 22 15V13C22 12.7348 21.8946 12.4804 21.7071 12.2929C21.5196 12.1054 21.2652 12 21 12ZM16 5H12V3.72C12.3023 3.54549 12.5536 3.29491 12.7291 2.99317C12.9045 2.69143 12.9979 2.34903 13 2C13 1.46957 12.7893 0.960859 12.4142 0.585786C12.0391 0.210714 11.5304 0 11 0C10.4696 0 9.96086 0.210714 9.58579 0.585786C9.21071 0.960859 9 1.46957 9 2C9.00211 2.34903 9.09552 2.69143 9.27095 2.99317C9.44638 3.29491 9.69772 3.54549 10 3.72V5H6C5.20435 5 4.44129 5.31607 3.87868 5.87868C3.31607 6.44129 3 7.20435 3 8V17C3 17.7956 3.31607 18.5587 3.87868 19.1213C4.44129 19.6839 5.20435 20 6 20H16C16.7956 20 17.5587 19.6839 18.1213 19.1213C18.6839 18.5587 19 17.7956 19 17V8C19 7.20435 18.6839 6.44129 18.1213 5.87868C17.5587 5.31607 16.7956 5 16 5ZM12.72 7L12.22 9H9.78L9.28 7H12.72ZM17 17C17 17.2652 16.8946 17.5196 16.7071 17.7071C16.5196 17.8946 16.2652 18 16 18H6C5.73478 18 5.48043 17.8946 5.29289 17.7071C5.10536 17.5196 5 17.2652 5 17V8C5 7.73478 5.10536 7.48043 5.29289 7.29289C5.48043 7.10536 5.73478 7 6 7H7.22L8 10.24C8.05475 10.4619 8.18385 10.6583 8.36579 10.7966C8.54774 10.9349 8.77157 11.0067 9 11H13C13.2284 11.0067 13.4523 10.9349 13.6342 10.7966C13.8162 10.6583 13.9452 10.4619 14 10.24L14.78 7H16C16.2652 7 16.5196 7.10536 16.7071 7.29289C16.8946 7.48043 17 7.73478 17 8V17ZM14 13C13.8022 13 13.6089 13.0586 13.4444 13.1685C13.28 13.2784 13.1518 13.4346 13.0761 13.6173C13.0004 13.8 12.9806 14.0011 13.0192 14.1951C13.0578 14.3891 13.153 14.5673 13.2929 14.7071C13.4327 14.847 13.6109 14.9422 13.8049 14.9808C13.9989 15.0194 14.2 14.9996 14.3827 14.9239C14.5654 14.8482 14.7216 14.72 14.8315 14.5556C14.9414 14.3911 15 14.1978 15 14C15 13.7348 14.8946 13.4804 14.7071 13.2929C14.5196 13.1054 14.2652 13 14 13Z" fill="#252525"/>
                </svg>
                Agents
            </button>
            <button>
                <svg style={{marginRight:'2px'}} width="18" height="21" viewBox="0 0 22 23" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M5.834 2.00001H17C18.3261 2.00001 19.5979 2.52679 20.5355 3.46447C21.4732 4.40215 22 5.67392 22 7.00001C22 8.32609 21.4732 9.59786 20.5355 10.5355C19.5979 11.4732 18.3261 12 17 12H13.832C13.6197 12.5755 13.236 13.072 12.7328 13.4227C12.2295 13.7734 11.6309 13.9615 11.0175 13.9615C10.4041 13.9615 9.80546 13.7734 9.30222 13.4227C8.79899 13.072 8.41535 12.5755 8.203 12H5C4.20435 12 3.44129 12.3161 2.87868 12.8787C2.31607 13.4413 2 14.2044 2 15C2 15.7957 2.31607 16.5587 2.87868 17.1213C3.44129 17.6839 4.20435 18 5 18H11V15L15 19L11 23V20H5C3.67392 20 2.40215 19.4732 1.46447 18.5355C0.526784 17.5979 0 16.3261 0 15C0 13.6739 0.526784 12.4022 1.46447 11.4645C2.40215 10.5268 3.67392 10 5 10H8.193C8.4034 9.42119 8.78685 8.92116 9.29126 8.5678C9.79568 8.21445 10.3966 8.02491 11.0125 8.02491C11.6284 8.02491 12.2293 8.21445 12.7337 8.5678C13.2382 8.92116 13.6216 9.42119 13.832 10H17C17.7956 10 18.5587 9.68394 19.1213 9.12133C19.6839 8.55872 20 7.79566 20 7.00001C20 6.20436 19.6839 5.4413 19.1213 4.87869C18.5587 4.31608 17.7956 4.00001 17 4.00001H5.834C5.5981 4.66722 5.13393 5.22956 4.52352 5.58764C3.91311 5.94571 3.19576 6.07647 2.49827 5.9568C1.80077 5.83713 1.16804 5.47474 0.711895 4.93367C0.255753 4.3926 0.00557292 3.70769 0.00557292 3.00001C0.00557292 2.29232 0.255753 1.60741 0.711895 1.06635C1.16804 0.525277 1.80077 0.162882 2.49827 0.0432105C3.19576 -0.0764608 3.91311 0.0542976 4.52352 0.412375C5.13393 0.770452 5.5981 1.33279 5.834 2.00001ZM2.44443 3.83148C2.60888 3.94136 2.80222 4.00001 3 4.00001C3.26522 4.00001 3.51957 3.89465 3.70711 3.70711C3.89464 3.51958 4 3.26522 4 3.00001C4 2.80222 3.94135 2.60889 3.83147 2.44444C3.72159 2.27999 3.56541 2.15181 3.38268 2.07613C3.19996 2.00044 2.99889 1.98064 2.80491 2.01922C2.61093 2.05781 2.43275 2.15305 2.29289 2.2929C2.15304 2.43275 2.0578 2.61093 2.01921 2.80492C1.98063 2.9989 2.00043 3.19996 2.07612 3.38269C2.15181 3.56542 2.27998 3.72159 2.44443 3.83148ZM10.4444 11.8315C10.6089 11.9414 10.8022 12 11 12C11.2652 12 11.5196 11.8946 11.7071 11.7071C11.8946 11.5196 12 11.2652 12 11C12 10.8022 11.9414 10.6089 11.8315 10.4444C11.7216 10.28 11.5654 10.1518 11.3827 10.0761C11.2 10.0004 10.9989 9.98064 10.8049 10.0192C10.6109 10.0578 10.4327 10.153 10.2929 10.2929C10.153 10.4328 10.0578 10.6109 10.0192 10.8049C9.98063 10.9989 10.0004 11.2 10.0761 11.3827C10.1518 11.5654 10.28 11.7216 10.4444 11.8315ZM17.3333 16.5056C17.8266 16.1759 18.4067 16 19 16C19.7957 16 20.5587 16.3161 21.1213 16.8787C21.6839 17.4413 22 18.2044 22 19C22 19.5933 21.8241 20.1734 21.4944 20.6667C21.1648 21.1601 20.6962 21.5446 20.1481 21.7716C19.5999 21.9987 18.9967 22.0581 18.4147 21.9424C17.8328 21.8266 17.2982 21.5409 16.8787 21.1213C16.4591 20.7018 16.1734 20.1672 16.0576 19.5853C15.9419 19.0033 16.0013 18.4001 16.2284 17.8519C16.4554 17.3038 16.8399 16.8352 17.3333 16.5056ZM18.4444 19.8315C18.6089 19.9414 18.8022 20 19 20C19.2652 20 19.5196 19.8946 19.7071 19.7071C19.8946 19.5196 20 19.2652 20 19C20 18.8022 19.9414 18.6089 19.8315 18.4444C19.7216 18.28 19.5654 18.1518 19.3827 18.0761C19.2 18.0004 18.9989 17.9806 18.8049 18.0192C18.6109 18.0578 18.4327 18.153 18.2929 18.2929C18.153 18.4327 18.0578 18.6109 18.0192 18.8049C17.9806 18.9989 18.0004 19.2 18.0761 19.3827C18.1518 19.5654 18.28 19.7216 18.4444 19.8315Z" fill="#252525"/>
                </svg>
                Chains
            </button>
            <button>
                <img style={{width:'20px', height:'19px', marginRight:'2px'}} src={settingsIcon}/>
                Settings
            </button>
        </div>
        <article className='newAgentContainer'>
            <button className='purpleShadow' onClick={handleOpenNewAgentFormClick}>+ Create a New Agent</button>
        </article>
        <article className='settingsFormContainer'>
            <label id="label-agentName" style={{display:'flex'}}>
                <div className='circle'></div>
                Agent Powering the Chat
            </label>
            {!isStreaming ? <Select 
                width="100%"
                options={AIAgentsList.map((agent) => ({ label: agent.getName() + (agent.getType() == 'system' ? ` [ Core ]`: ""), value: agent.getName() }))} 
                defaultOption={formValues.agentName || "helpfulAssistant"}
                labelledBy="label-agentName" 
                id="settingsSelectAgent"
                onValueChange={handleSwitchAgent}
            /> : <div className='beingUsed'>
                    Currenly used by the Chat
                    <svg width="24px" height="22px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13 14C13 13.4477 12.5523 13 12 13C11.4477 13 11 13.4477 11 14V16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16V14Z" fill="#454545"/>
                        <path fillRule="evenodd" clipRule="evenodd" d="M7 8.12037C5.3161 8.53217 4 9.95979 4 11.7692V17.3077C4 19.973 6.31545 22 9 22H15C17.6846 22 20 19.973 20 17.3077V11.7692C20 9.95979 18.6839 8.53217 17 8.12037V7C17 4.23858 14.7614 2 12 2C9.23858 2 7 4.23858 7 7V8.12037ZM15 7V8H9V7C9 6.64936 9.06015 6.31278 9.17071 6C9.58254 4.83481 10.6938 4 12 4C13.3062 4 14.4175 4.83481 14.8293 6C14.9398 6.31278 15 6.64936 15 7ZM6 11.7692C6 10.866 6.81856 10 8 10H16C17.1814 10 18 10.866 18 11.7692V17.3077C18 18.7208 16.7337 20 15 20H9C7.26627 20 6 18.7208 6 17.3077V11.7692Z" fill="#454545"/>
                    </svg>
                </div>}
            <label id="label-modelName">Model</label>
            {!isStreaming ? <Select 
                width="100%"
                options={modelsList.map((model) => ({ label: model, value: model }))} 
                defaultOption={formValues.modelName}
                labelledBy="label-modelName" 
                id="settingsSelectModel"
                onValueChange={handleSwitchModel}
            /> : <div className='beingUsed'>
                Currenly used by the Chat
                <svg width="24px" height="22px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13 14C13 13.4477 12.5523 13 12 13C11.4477 13 11 13.4477 11 14V16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16V14Z" fill="#454545"/>
                    <path fillRule="evenodd" clipRule="evenodd" d="M7 8.12037C5.3161 8.53217 4 9.95979 4 11.7692V17.3077C4 19.973 6.31545 22 9 22H15C17.6846 22 20 19.973 20 17.3077V11.7692C20 9.95979 18.6839 8.53217 17 8.12037V7C17 4.23858 14.7614 2 12 2C9.23858 2 7 4.23858 7 7V8.12037ZM15 7V8H9V7C9 6.64936 9.06015 6.31278 9.17071 6C9.58254 4.83481 10.6938 4 12 4C13.3062 4 14.4175 4.83481 14.8293 6C14.9398 6.31278 15 6.64936 15 7ZM6 11.7692C6 10.866 6.81856 10 8 10H16C17.1814 10 18 10.866 18 11.7692V17.3077C18 18.7208 16.7337 20 15 20H9C7.26627 20 6 18.7208 6 17.3077V11.7692Z" fill="#454545"/>
                </svg>
            </div>}
            <label>System Prompt</label>
            <div className='systemPromptContainer'>
                <input 
                    spellCheck="false"
                    readOnly
                    type="text" 
                    value={formValues.systemPrompt.length > 37 ? formValues.systemPrompt.substring(0, 34)+'...' : formValues.systemPrompt}
                />
                <button className='purpleShadow' onClick={handleOpenEditAgentFormClick}>
                    <svg width="18" height="18" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M21.9984 5.76357C21.9992 5.61882 21.9715 5.47532 21.9167 5.34131C21.862 5.2073 21.7813 5.08541 21.6794 4.98263L17.0157 0.318979C16.913 0.217037 16.7911 0.136386 16.6571 0.0816487C16.5231 0.0269117 16.3796 -0.000833794 16.2348 3.12556e-06C16.0901 -0.000833794 15.9466 0.0269117 15.8125 0.0816487C15.6785 0.136386 15.5566 0.217037 15.4539 0.318979L12.3411 3.43175L0.318995 15.4538C0.217053 15.5566 0.136401 15.6785 0.0816639 15.8125C0.026927 15.9465 -0.000818536 16.09 1.83843e-05 16.2348V20.8984C1.83843e-05 21.1902 0.115902 21.4699 0.322177 21.6762C0.528451 21.8825 0.80822 21.9984 1.09994 21.9984H5.76359C5.9175 22.0067 6.07145 21.9827 6.21546 21.9277C6.35946 21.8728 6.49032 21.7882 6.59953 21.6794L18.5556 9.65728L21.6794 6.59951C21.7796 6.49278 21.8614 6.37011 21.9214 6.23654C21.932 6.14886 21.932 6.06023 21.9214 5.97256C21.9265 5.92136 21.9265 5.86977 21.9214 5.81857L21.9984 5.76357ZM5.31262 19.7985H2.19985V16.6858L13.122 5.76357L16.2348 8.87634L5.31262 19.7985ZM17.7857 7.32546L14.6729 4.21269L16.2348 2.6618L19.3366 5.76357L17.7857 7.32546Z" fill="white"/>
                    </svg>
                </button>
            </div>
            <label>Temperature</label>
            <div className='temperatureContainer'>
                <input 
                    spellCheck="false" 
                    type="number"
                    step="0.01" min="0" max="2" 
                    value={formValues.temperature}
                    onChange={(e) => setFormValues(formValues => ({...formValues, temperature : e.target.value === '' ? 0 : parseFloat(e.target.value)}))}
                />
                <figure title="0 : Predictable <-> 2 : Creative" data-tooltip="Predictable <-> Creative">
                    <svg style={{transform:'translateX(0.5px) translateY(0.5px)'}} width="22" height="22" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M9.40629 1.71324H24V3.42702H10.1991C10.2567 3.70901 10.2857 3.99609 10.2857 4.2839V13.8039C11.1126 14.6476 11.6719 15.7165 11.8935 16.8767C12.1151 18.0368 11.9892 19.2366 11.5315 20.3255C11.0738 21.4143 10.3047 22.3439 9.32069 22.9976C8.33665 23.6513 7.18148 24 6 24C4.81853 24 3.66335 23.6513 2.67932 22.9976C1.69529 22.3439 0.926207 21.4143 0.468513 20.3255C0.0108194 19.2366 -0.115114 18.0368 0.106505 16.8767C0.328123 15.7165 0.887429 14.6476 1.71429 13.8039V4.2839C1.71134 3.38597 1.99162 2.50997 2.51529 1.78044C3.03897 1.0509 3.77937 0.504982 4.63123 0.22029C5.4831 -0.0644014 6.40306 -0.0733719 7.26031 0.194654C8.11757 0.462681 8.86848 0.994061 9.40629 1.71324ZM3.56976 21.5261C4.28481 22.0174 5.13235 22.2798 6 22.2785C6.86765 22.2798 7.71519 22.0174 8.43024 21.5261C9.1453 21.0348 9.69408 20.3378 10.0038 19.5275C10.3136 18.7173 10.3697 17.8321 10.1647 16.9893C9.95972 16.1464 9.50331 15.3858 8.856 14.8082L8.57143 14.552V4.2839C8.57143 3.60212 8.30051 2.94826 7.81828 2.46617C7.33604 1.98408 6.68199 1.71324 6 1.71324C5.31802 1.71324 4.66396 1.98408 4.18173 2.46617C3.69949 2.94826 3.42857 3.60212 3.42857 4.2839V14.552L3.144 14.8082C2.4967 15.3858 2.04029 16.1464 1.83529 16.9893C1.6303 17.8321 1.6864 18.7173 1.99616 19.5275C2.30592 20.3378 2.85471 21.0348 3.56976 21.5261ZM21.4288 6.85456H15.4288V8.56834H21.4288V6.85456ZM24.0002 11.9959H15.4288V13.7097H24.0002V11.9959ZM21.4288 17.1372H15.4288V18.851H21.4288V17.1372ZM6.85738 4.2839V15.5811C7.42927 15.7832 7.91128 16.181 8.2182 16.704C8.52513 17.2271 8.63721 17.8418 8.53463 18.4394C8.43205 19.0371 8.12143 19.5793 7.65766 19.9702C7.19388 20.361 6.60682 20.5754 6.00023 20.5754C5.39364 20.5754 4.80658 20.361 4.34281 19.9702C3.87904 19.5793 3.56841 19.0371 3.46584 18.4394C3.36326 17.8418 3.47534 17.2271 3.78226 16.704C4.08919 16.181 4.57119 15.7832 5.14309 15.5811V4.2839H6.85738Z" fill="black"/>
                    </svg>
                </figure>
            </div>
            <label>Context Length (RAG needs 5000+)</label>
            <div className='contextContainer'>
                <input 
                    spellCheck="false" 
                    type="number"
                    step="1" min="0" max="1000000" 
                    value={formValues.maxContextLength}
                    onChange={(e) => setFormValues(formValues => ({...formValues, maxContextLength : e.target.value === '' ? 0 : parseInt(e.target.value)}))}
                />
                <figure title="Amount of Tokens considered during Inference" data-tooltip="Amount of Tokens considered during Inference">
                    <svg width="24" height="24" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M16.6667 8H9.33333C8.6 8 8 8.6 8 9.33333V16.6667C8 17.4 8.6 18 9.33333 18H16.6667C17.4 18 18 17.4 18 16.6667V9.33333C18 8.6 17.4 8 16.6667 8ZM16 16H10V10H16V16ZM26 10.3333C26 9.6 25.4 9 24.6667 9H22.3333V6.33333C22.3333 4.86667 21.1333 3.66667 19.6667 3.66667H17V1.33333C17 0.6 16.4 0 15.6667 0C14.9333 0 14.3333 0.6 14.3333 1.33333V3.66667H11.6667V1.33333C11.6667 0.6 11.0667 0 10.3333 0C9.6 0 9 0.6 9 1.33333V3.66667H6.33333C4.86667 3.66667 3.66667 4.86667 3.66667 6.33333V9H1.33333C0.6 9 0 9.6 0 10.3333C0 11.0667 0.6 11.6667 1.33333 11.6667H3.66667V14.3333H1.33333C0.6 14.3333 0 14.9333 0 15.6667C0 16.4 0.6 17 1.33333 17H3.66667V19.6667C3.66667 21.1333 4.86667 22.3333 6.33333 22.3333H9V24.6667C9 25.4 9.6 26 10.3333 26C11.0667 26 11.6667 25.4 11.6667 24.6667V22.3333H14.3333V24.6667C14.3333 25.4 14.9333 26 15.6667 26C16.4 26 17 25.4 17 24.6667V22.3333H19.6667C21.1333 22.3333 22.3333 21.1333 22.3333 19.6667V17H24.6667C25.4 17 26 16.4 26 15.6667C26 14.9333 25.4 14.3333 24.6667 14.3333H22.3333V11.6667H24.6667C25.4 11.6667 26 11.0667 26 10.3333ZM19.3333 20.6667H6.66667C5.93333 20.6667 5.33333 20.0667 5.33333 19.3333V6.66667C5.33333 5.93333 5.93333 5.33333 6.66667 5.33333H19.3333C20.0667 5.33333 20.6667 5.93333 20.6667 6.66667V19.3333C20.6667 20.0667 20.0667 20.6667 19.3333 20.6667Z" fill="black"/>
                    </svg>
                </figure>
            </div>
            <label>Max Tokens Per Reply</label>
            <div className='maxTokensContainer'>
                <input
                    spellCheck="false"
                    type="number"
                    value={formValues.maxTokensPerReply}
                    onChange={(e) => setFormValues(formValues => ({...formValues, maxTokensPerReply : e.target.value === '' ? 0 : parseInt(e.target.value)}))}
                />
                <figure>
                    <svg width="20" height="20" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M22 14.6667V20.7778C22 21.1019 21.8712 21.4128 21.642 21.642C21.4128 21.8712 21.1019 22 20.7778 22H14.6667V19.5556H19.5556V14.6667H22ZM7.33333 0V2.44444H2.44444V7.33333H0V1.22222C0 0.898069 0.128769 0.587192 0.357981 0.357981C0.587192 0.128769 0.898069 0 1.22222 0H7.33333ZM17.8249 2.44444H14.6667V0H20.7778C21.1019 0 21.4128 0.128769 21.642 0.357981C21.8712 0.587192 22 0.898069 22 1.22222V7.33333H19.5556V4.17267L14.2193 9.50644L12.4911 7.77822L17.8249 2.44444ZM4.17511 19.5531H7.33333V21.9976H1.22222C0.898069 21.9976 0.587192 21.8688 0.357981 21.6396C0.128769 21.4104 0 21.0995 0 20.7753V14.6642H2.44444V17.8261L7.78067 12.4911L9.50889 14.2193L4.17511 19.5531Z" fill="black"/>
                    </svg>
                </figure>
            </div>
            <label>Web Search</label>
            <div className='webSearchContainer'>
                <span>Processing Speed</span>
                <div className='switchContainer' onClick={() => setWebSearchSummarization(prevStatus => !prevStatus)}>
                    <div className={webSearchSummarization ? 'switch active' : 'switch'}></div>
                </div>
                <span>Context Economy</span>
            </div>
            <div className='settingsSaveContainer'>
                <button className='more purpleShadow' onClick={handleOpenEditAgentFormClick}>More Settings</button>
                {
                    !showSavingSuccessfulBtn ? <button className='save purpleShadow' onClick={handleUpdateAgent}>Save</button>
                    :<button className='save purpleShadow'>
                        <svg className='checkmarkSVG' viewBox='0 0 100 100'>
                            <path className='checkmarkIcon' d='M 25 50 L 43 68 L 75 32'/>
                        </svg>
                    </button>
                }
            </div>
        </article>*/}
    </aside>)
}

export default AgentSettings